/**
 * FormValidation v1.0
 * Website - https://github.com/dmetri333/FormValidation
 * Licensed under Apache License (https://github.com/dmetri333/FormValidation/blob/master/LICENSE)
 */
!function(t){function n(n,e,o){return this.each(function(){var a=t(this),s=a.data("formValidation"),r=t.extend({},i.DEFAULTS,a.data(),"object"==typeof n&&n);s||a.data("formValidation",s=new i(this,r)),"string"==typeof n&&("runValidation"==n?a.data("result",s[n](e,o)):s[n](e,o))})}var i=function(n,i){this.options=i,this.$element=t(n),this.$element.on(this.options.eventType,t.proxy(function(t){return this.runValidation()},this))};i.DEFAULTS={validationMethods:{notempty:function(n,i,e){return""!==t.trim(n.val())},isnumber:function(t,n,i){return/^\d+$/.test(t.val())},minlength:function(t,n,i){return t.val().length>=i},email:function(t,n,i){return-1!=t.val().search(/^([a-zA-Z0-9_.\-+])+@([a-zA-Z0-9_.\-])+\.([a-zA-Z])+([a-zA-Z])+/)},match:function(n,i,e){return n.val()==t(e).val()},defaultselect:function(t,n,i){return t.val()!=i},checked:function(t,n,i){return t.is(":checked")}},responseMethods:{addInvalidClass:function(t,n){t.removeClass("invalid");for(var i in n)if(!n[i]){t.addClass("invalid");break}}},eventType:"submit"},i.prototype.runValidation=function(){var n=this,i=!1;return this.$element.find("input[required], textarea[required], select[required]").each(function(){$this=t(this);var e=[],o=$this.data();t.each(o,function(t,o){if(n.options.validationMethods[t]&&"response"!=t){var a=n.options.validationMethods[t]($this,t,o);e[t]=a,a||(i=!0)}});var a=$this.data("response")?$this.data("response"):"addInvalidClass";n.options.responseMethods[a]&&n.options.responseMethods[a]($this,e)}),!i},i.prototype.addValidation=function(t,n){this.options.validationMethods[t]=n},i.prototype.addResponse=function(t,n){this.options.responseMethods[t]=n},t.fn.formValidation=n,t.fn.formValidation.Constructor=i}(jQuery);
